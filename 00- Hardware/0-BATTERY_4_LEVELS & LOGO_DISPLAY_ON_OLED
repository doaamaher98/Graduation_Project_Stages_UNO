#include <SPI.h>
#include <Wire.h>
#include "Adafruit_GFX.h"
#include "Adafruit_SSD1306.h"

#define screen_width  128
#define screen_height 64

#define OLED_RESET     4 // Reset pin # (or -1 if sharing Arduino reset pin)

Adafruit_SSD1306 display(screen_width, screen_height);

#define cellPin A0

const float mvc = 4.68;

float counts = 0;
float mv = 0;

void setup() {
  // put your setup code here, to run once:
  Serial.begin(19200);
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);

  // LOGO
    static const unsigned char PROGMEM epd_bitmap_NORMAL2 []  = {
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x06, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x0f, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x0f, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x1f, 0x00, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x3f, 0x01, 0xbf, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x7f, 0x03, 0x7e, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0xfe, 0x06, 0xbc, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0xfe, 0x0f, 0x78, 0x7f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x01, 0xfe, 0x1f, 0xf1, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x03, 0xfc, 0x3f, 0xe7, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x03, 0xfc, 0x7f, 0xcf, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x07, 0xf9, 0xff, 0x9e, 0xf8, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x0f, 0xf3, 0xff, 0xbd, 0x71, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x0f, 0xf7, 0xff, 0x7f, 0xe3, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x1f, 0xff, 0xfe, 0xfe, 0xcf, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x1f, 0xff, 0xff, 0xff, 0x9f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x3f, 0xfc, 0x7f, 0xfe, 0x3f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x3f, 0xf0, 0x7f, 0xfc, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x3f, 0xf0, 0x7f, 0xf9, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x3f, 0xe0, 0xff, 0xf7, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x3f, 0xe0, 0xff, 0xff, 0xf6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x3f, 0xe1, 0x8f, 0xff, 0xfd, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x3f, 0xff, 0x0f, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x3f, 0xfe, 0x0f, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x3f, 0xfc, 0x0f, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x3f, 0xfc, 0x19, 0xff, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x7f, 0xfc, 0x61, 0xff, 0xf7, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x7f, 0xff, 0xc1, 0xff, 0xef, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0xff, 0xff, 0xc1, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x01, 0xff, 0xff, 0x83, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x01, 0xff, 0xff, 0x87, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0xff, 0xff, 0xfc, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x0e, 0x7f, 0xff, 0xf0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x1f, 0x9f, 0xff, 0xf0, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x3f, 0xc7, 0xff, 0xe0, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x7f, 0xf3, 0xff, 0xe1, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0xff, 0xf8, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0xff, 0xfe, 0x7f, 0xff, 0x01, 0x80, 0x18, 0x7f, 0xc7, 0xfe, 0x3f, 0xc2, 0x03, 0xfe, 0x18, 0x06,
      0xff, 0xff, 0x3f, 0xfc, 0x01, 0x80, 0x18, 0x7f, 0xc7, 0xfc, 0x70, 0x82, 0x07, 0x8e, 0x1c, 0x06,
      0xff, 0xff, 0x9f, 0xf0, 0x01, 0x80, 0x18, 0x60, 0x06, 0x00, 0x60, 0x02, 0x06, 0x00, 0x1c, 0x06,
      0xff, 0xff, 0xcf, 0xe0, 0x01, 0x80, 0x18, 0x60, 0x06, 0x00, 0x60, 0x02, 0x0c, 0x00, 0x1e, 0x06,
      0xff, 0xff, 0xef, 0x80, 0x01, 0x80, 0x18, 0x60, 0x06, 0x00, 0x60, 0x02, 0x0c, 0x00, 0x13, 0x06,
      0xff, 0xff, 0xef, 0x00, 0x01, 0x80, 0x18, 0x60, 0x06, 0x00, 0x60, 0x02, 0x18, 0x00, 0x13, 0x86,
      0xff, 0xff, 0xec, 0x00, 0x01, 0x80, 0x18, 0x60, 0x06, 0x00, 0x78, 0x02, 0x18, 0x00, 0x11, 0x86,
      0xff, 0xff, 0xe0, 0x00, 0x01, 0x80, 0x18, 0x7f, 0x87, 0xf8, 0x1e, 0x02, 0x18, 0x00, 0x10, 0xc6,
      0xff, 0xff, 0xe0, 0x00, 0x01, 0x80, 0x18, 0x7f, 0x87, 0xf8, 0x0f, 0x82, 0x18, 0x06, 0x10, 0x66,
      0x7f, 0xff, 0xc0, 0x00, 0x01, 0x80, 0x18, 0x60, 0x06, 0x00, 0x01, 0xc2, 0x18, 0x06, 0x10, 0x66,
      0x7f, 0xff, 0x00, 0x00, 0x01, 0x80, 0x18, 0x60, 0x06, 0x00, 0x00, 0xc2, 0x18, 0x06, 0x10, 0x36,
      0x3f, 0xfe, 0x00, 0x00, 0x01, 0x80, 0x18, 0x60, 0x06, 0x00, 0x00, 0xc2, 0x1c, 0x06, 0x10, 0x3e,
      0x3f, 0xfc, 0x00, 0x00, 0x01, 0x80, 0x18, 0x60, 0x06, 0x00, 0x00, 0xc2, 0x0c, 0x06, 0x10, 0x1e,
      0x1f, 0xf8, 0x00, 0x00, 0x01, 0x80, 0x18, 0x60, 0x06, 0x00, 0x00, 0xc2, 0x0e, 0x06, 0x10, 0x0e,
      0x1f, 0xf0, 0x00, 0x00, 0x01, 0xff, 0x18, 0x60, 0x07, 0xfc, 0x41, 0xc2, 0x07, 0x06, 0x10, 0x0e,
      0x1f, 0xe0, 0x00, 0x00, 0x01, 0xff, 0x18, 0x60, 0x07, 0xfe, 0x7f, 0x82, 0x03, 0xfe, 0x10, 0x06,
      0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0xf8, 0x00, 0x00,
      0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };
    display.clearDisplay();
    display.drawBitmap(1, 2, epd_bitmap_NORMAL2, 128, 64, 1);
    display.display();
    /**********************************************************************************/
  
    delay(3000);
}







void loop() {
  // put your main code here, to run repeatedly:


  counts = analogRead(cellPin);
  float Percentage = (counts / 1023.0) * 100;

  Serial.println(Percentage + String(" %"));
  //
  //  mv = counts * mvc;
  //  Serial.println(String(mv) + String(" mv"));

  if (Percentage == 100.00)
  {
    static const unsigned char PROGMEM _100_charge []  = {
      0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };
    display.clearDisplay();
    display.drawBitmap(35, 20, _100_charge, 64, 32, 1);
    display.display();
  }
  else if (Percentage >= 75.00 && Percentage <= 99.00)
  {
    static const unsigned char PROGMEM _75_charge []  = {
      0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x01, 0xe0,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x01, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x01, 0xe0,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x01, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x01, 0xe0,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x01, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x01, 0xfc,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x01, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x01, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x01, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x01, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x01, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x01, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x01, 0xf0,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x01, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x01, 0xe0,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x01, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x01, 0xe0,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x03, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };
    display.clearDisplay();
    display.drawBitmap(35, 20, _75_charge, 64, 32, 1);
    display.display();
  }

  else if (Percentage >= 50.00 && Percentage <= 74.00)
  {
    static const unsigned char PROGMEM _50_charge []  = {
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe1,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe1,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe1, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x03, 0xe1,
      0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x03, 0xe1, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x03, 0xe1,
      0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x03, 0xe1, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x03, 0xe1,
      0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x03, 0xe1, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x03, 0xe1,
      0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x03, 0xff,
      0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x03, 0xff,
      0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x03, 0xff,
      0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x03, 0xff,
      0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x03, 0xfd, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x03, 0xe1,
      0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x03, 0xe1, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x03, 0xe1,
      0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x03, 0xe1, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x03, 0xe1,
      0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x03, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe1,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe1,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01
    };
    display.clearDisplay();
    display.drawBitmap(35, 20, _50_charge, 64, 32, 1);
    display.display();
  }


  else if (Percentage >= 25.00 && Percentage <= 49.00)
  {
    static const unsigned char PROGMEM _25_charge []  = {
      0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x03, 0xe0,
      0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x03, 0xe0, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x03, 0xe0,
      0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x03, 0xe0, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x03, 0xe0,
      0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x03, 0xe0, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x03, 0xfc,
      0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x03, 0xfe, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x03, 0xff,
      0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x03, 0xff,
      0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x03, 0xff,
      0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x03, 0xff,
      0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x03, 0xfc, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x03, 0xe0,
      0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x03, 0xe0, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x03, 0xe0,
      0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x03, 0xe0, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x03, 0xe0,
      0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x03, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };
    display.clearDisplay();
    display.drawBitmap(35, 20, _25_charge, 64, 32, 1);
    display.display();
  }


  else if (Percentage >= 0.00 && Percentage <= 24.00)
  {
    static const unsigned char PROGMEM _0_charge []  = {
      0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
      0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0,
      0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0,
      0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0,
      0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc,
      0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
      0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
      0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
      0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
      0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0,
      0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0,
      0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0,
      0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0
    };
    display.clearDisplay();
    display.drawBitmap(35, 20, _0_charge, 64, 32, 1);
    display.display();
  }
  //  Serial.println();
  delay(1000);

}
